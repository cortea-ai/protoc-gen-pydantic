// fork from https://github.com/envoyproxy/protoc-gen-validate/blob/main/validate/validate.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: py_validate.proto

package validate

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OneofRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Optional []string `protobuf:"bytes,1,rep,name=optional,proto3" json:"optional,omitempty"`
}

func (x *OneofRules) Reset() {
	*x = OneofRules{}
	mi := &file_py_validate_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OneofRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneofRules) ProtoMessage() {}

func (x *OneofRules) ProtoReflect() protoreflect.Message {
	mi := &file_py_validate_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneofRules.ProtoReflect.Descriptor instead.
func (*OneofRules) Descriptor() ([]byte, []int) {
	return file_py_validate_proto_rawDescGZIP(), []int{0}
}

func (x *OneofRules) GetOptional() []string {
	if x != nil {
		return x.Optional
	}
	return nil
}

type FieldRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*FieldRules_Float
	//	*FieldRules_Int32
	//	*FieldRules_String_
	//	*FieldRules_Repeated
	//	*FieldRules_Message
	Type isFieldRules_Type `protobuf_oneof:"type"`
}

func (x *FieldRules) Reset() {
	*x = FieldRules{}
	mi := &file_py_validate_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldRules) ProtoMessage() {}

func (x *FieldRules) ProtoReflect() protoreflect.Message {
	mi := &file_py_validate_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldRules.ProtoReflect.Descriptor instead.
func (*FieldRules) Descriptor() ([]byte, []int) {
	return file_py_validate_proto_rawDescGZIP(), []int{1}
}

func (m *FieldRules) GetType() isFieldRules_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *FieldRules) GetFloat() *FloatRules {
	if x, ok := x.GetType().(*FieldRules_Float); ok {
		return x.Float
	}
	return nil
}

func (x *FieldRules) GetInt32() *Int32Rules {
	if x, ok := x.GetType().(*FieldRules_Int32); ok {
		return x.Int32
	}
	return nil
}

func (x *FieldRules) GetString_() *StringRules {
	if x, ok := x.GetType().(*FieldRules_String_); ok {
		return x.String_
	}
	return nil
}

func (x *FieldRules) GetRepeated() *RepeatedRules {
	if x, ok := x.GetType().(*FieldRules_Repeated); ok {
		return x.Repeated
	}
	return nil
}

func (x *FieldRules) GetMessage() *MessageRules {
	if x, ok := x.GetType().(*FieldRules_Message); ok {
		return x.Message
	}
	return nil
}

type isFieldRules_Type interface {
	isFieldRules_Type()
}

type FieldRules_Float struct {
	Float *FloatRules `protobuf:"bytes,1,opt,name=float,proto3,oneof"`
}

type FieldRules_Int32 struct {
	Int32 *Int32Rules `protobuf:"bytes,2,opt,name=int32,proto3,oneof"`
}

type FieldRules_String_ struct {
	String_ *StringRules `protobuf:"bytes,3,opt,name=string,proto3,oneof"`
}

type FieldRules_Repeated struct {
	Repeated *RepeatedRules `protobuf:"bytes,4,opt,name=repeated,proto3,oneof"`
}

type FieldRules_Message struct {
	Message *MessageRules `protobuf:"bytes,5,opt,name=message,proto3,oneof"`
}

func (*FieldRules_Float) isFieldRules_Type() {}

func (*FieldRules_Int32) isFieldRules_Type() {}

func (*FieldRules_String_) isFieldRules_Type() {}

func (*FieldRules_Repeated) isFieldRules_Type() {}

func (*FieldRules_Message) isFieldRules_Type() {}

type FloatRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lt  *float32 `protobuf:"fixed32,1,opt,name=lt,proto3,oneof" json:"lt,omitempty"`
	Lte *float32 `protobuf:"fixed32,2,opt,name=lte,proto3,oneof" json:"lte,omitempty"`
	Gt  *float32 `protobuf:"fixed32,3,opt,name=gt,proto3,oneof" json:"gt,omitempty"`
	Gte *float32 `protobuf:"fixed32,4,opt,name=gte,proto3,oneof" json:"gte,omitempty"`
	// Types that are assignable to DefaultConfig:
	//
	//	*FloatRules_Default
	DefaultConfig isFloatRules_DefaultConfig `protobuf_oneof:"default_config"`
}

func (x *FloatRules) Reset() {
	*x = FloatRules{}
	mi := &file_py_validate_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FloatRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FloatRules) ProtoMessage() {}

func (x *FloatRules) ProtoReflect() protoreflect.Message {
	mi := &file_py_validate_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FloatRules.ProtoReflect.Descriptor instead.
func (*FloatRules) Descriptor() ([]byte, []int) {
	return file_py_validate_proto_rawDescGZIP(), []int{2}
}

func (x *FloatRules) GetLt() float32 {
	if x != nil && x.Lt != nil {
		return *x.Lt
	}
	return 0
}

func (x *FloatRules) GetLte() float32 {
	if x != nil && x.Lte != nil {
		return *x.Lte
	}
	return 0
}

func (x *FloatRules) GetGt() float32 {
	if x != nil && x.Gt != nil {
		return *x.Gt
	}
	return 0
}

func (x *FloatRules) GetGte() float32 {
	if x != nil && x.Gte != nil {
		return *x.Gte
	}
	return 0
}

func (m *FloatRules) GetDefaultConfig() isFloatRules_DefaultConfig {
	if m != nil {
		return m.DefaultConfig
	}
	return nil
}

func (x *FloatRules) GetDefault() float32 {
	if x, ok := x.GetDefaultConfig().(*FloatRules_Default); ok {
		return x.Default
	}
	return 0
}

type isFloatRules_DefaultConfig interface {
	isFloatRules_DefaultConfig()
}

type FloatRules_Default struct {
	Default float32 `protobuf:"fixed32,5,opt,name=default,proto3,oneof"`
}

func (*FloatRules_Default) isFloatRules_DefaultConfig() {}

type Int32Rules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lt  *int32 `protobuf:"varint,1,opt,name=lt,proto3,oneof" json:"lt,omitempty"`
	Lte *int32 `protobuf:"varint,2,opt,name=lte,proto3,oneof" json:"lte,omitempty"`
	Gt  *int32 `protobuf:"varint,3,opt,name=gt,proto3,oneof" json:"gt,omitempty"`
	Gte *int32 `protobuf:"varint,4,opt,name=gte,proto3,oneof" json:"gte,omitempty"`
	// Types that are assignable to DefaultConfig:
	//
	//	*Int32Rules_Default
	DefaultConfig isInt32Rules_DefaultConfig `protobuf_oneof:"default_config"`
}

func (x *Int32Rules) Reset() {
	*x = Int32Rules{}
	mi := &file_py_validate_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Int32Rules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int32Rules) ProtoMessage() {}

func (x *Int32Rules) ProtoReflect() protoreflect.Message {
	mi := &file_py_validate_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int32Rules.ProtoReflect.Descriptor instead.
func (*Int32Rules) Descriptor() ([]byte, []int) {
	return file_py_validate_proto_rawDescGZIP(), []int{3}
}

func (x *Int32Rules) GetLt() int32 {
	if x != nil && x.Lt != nil {
		return *x.Lt
	}
	return 0
}

func (x *Int32Rules) GetLte() int32 {
	if x != nil && x.Lte != nil {
		return *x.Lte
	}
	return 0
}

func (x *Int32Rules) GetGt() int32 {
	if x != nil && x.Gt != nil {
		return *x.Gt
	}
	return 0
}

func (x *Int32Rules) GetGte() int32 {
	if x != nil && x.Gte != nil {
		return *x.Gte
	}
	return 0
}

func (m *Int32Rules) GetDefaultConfig() isInt32Rules_DefaultConfig {
	if m != nil {
		return m.DefaultConfig
	}
	return nil
}

func (x *Int32Rules) GetDefault() int32 {
	if x, ok := x.GetDefaultConfig().(*Int32Rules_Default); ok {
		return x.Default
	}
	return 0
}

type isInt32Rules_DefaultConfig interface {
	isInt32Rules_DefaultConfig()
}

type Int32Rules_Default struct {
	Default int32 `protobuf:"varint,5,opt,name=default,proto3,oneof"`
}

func (*Int32Rules_Default) isInt32Rules_DefaultConfig() {}

type StringRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Len       *uint64 `protobuf:"varint,1,opt,name=len,proto3,oneof" json:"len,omitempty"`
	MinLength *uint64 `protobuf:"varint,2,opt,name=min_length,json=minLength,proto3,oneof" json:"min_length,omitempty"`
	MaxLength *uint64 `protobuf:"varint,3,opt,name=max_length,json=maxLength,proto3,oneof" json:"max_length,omitempty"`
	// Types that are assignable to WellKnown:
	//
	//	*StringRules_Uuid
	WellKnown isStringRules_WellKnown `protobuf_oneof:"well_known"`
	// Types that are assignable to DefaultConfig:
	//
	//	*StringRules_Default
	DefaultConfig isStringRules_DefaultConfig `protobuf_oneof:"default_config"`
}

func (x *StringRules) Reset() {
	*x = StringRules{}
	mi := &file_py_validate_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringRules) ProtoMessage() {}

func (x *StringRules) ProtoReflect() protoreflect.Message {
	mi := &file_py_validate_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringRules.ProtoReflect.Descriptor instead.
func (*StringRules) Descriptor() ([]byte, []int) {
	return file_py_validate_proto_rawDescGZIP(), []int{4}
}

func (x *StringRules) GetLen() uint64 {
	if x != nil && x.Len != nil {
		return *x.Len
	}
	return 0
}

func (x *StringRules) GetMinLength() uint64 {
	if x != nil && x.MinLength != nil {
		return *x.MinLength
	}
	return 0
}

func (x *StringRules) GetMaxLength() uint64 {
	if x != nil && x.MaxLength != nil {
		return *x.MaxLength
	}
	return 0
}

func (m *StringRules) GetWellKnown() isStringRules_WellKnown {
	if m != nil {
		return m.WellKnown
	}
	return nil
}

func (x *StringRules) GetUuid() bool {
	if x, ok := x.GetWellKnown().(*StringRules_Uuid); ok {
		return x.Uuid
	}
	return false
}

func (m *StringRules) GetDefaultConfig() isStringRules_DefaultConfig {
	if m != nil {
		return m.DefaultConfig
	}
	return nil
}

func (x *StringRules) GetDefault() string {
	if x, ok := x.GetDefaultConfig().(*StringRules_Default); ok {
		return x.Default
	}
	return ""
}

type isStringRules_WellKnown interface {
	isStringRules_WellKnown()
}

type StringRules_Uuid struct {
	Uuid bool `protobuf:"varint,4,opt,name=uuid,proto3,oneof"`
}

func (*StringRules_Uuid) isStringRules_WellKnown() {}

type isStringRules_DefaultConfig interface {
	isStringRules_DefaultConfig()
}

type StringRules_Default struct {
	Default string `protobuf:"bytes,5,opt,name=default,proto3,oneof"`
}

func (*StringRules_Default) isStringRules_DefaultConfig() {}

type MessageRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultFactory string `protobuf:"bytes,1,opt,name=default_factory,json=defaultFactory,proto3" json:"default_factory,omitempty"`
	DefaultEmpty   bool   `protobuf:"varint,2,opt,name=default_empty,json=defaultEmpty,proto3" json:"default_empty,omitempty"`
}

func (x *MessageRules) Reset() {
	*x = MessageRules{}
	mi := &file_py_validate_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageRules) ProtoMessage() {}

func (x *MessageRules) ProtoReflect() protoreflect.Message {
	mi := &file_py_validate_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageRules.ProtoReflect.Descriptor instead.
func (*MessageRules) Descriptor() ([]byte, []int) {
	return file_py_validate_proto_rawDescGZIP(), []int{5}
}

func (x *MessageRules) GetDefaultFactory() string {
	if x != nil {
		return x.DefaultFactory
	}
	return ""
}

func (x *MessageRules) GetDefaultEmpty() bool {
	if x != nil {
		return x.DefaultEmpty
	}
	return false
}

type RepeatedRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Len       *uint64     `protobuf:"varint,1,opt,name=len,proto3,oneof" json:"len,omitempty"`
	MinLength *uint64     `protobuf:"varint,2,opt,name=min_length,json=minLength,proto3,oneof" json:"min_length,omitempty"`
	MaxLength *uint64     `protobuf:"varint,3,opt,name=max_length,json=maxLength,proto3,oneof" json:"max_length,omitempty"`
	Items     *FieldRules `protobuf:"bytes,4,opt,name=items,proto3,oneof" json:"items,omitempty"`
}

func (x *RepeatedRules) Reset() {
	*x = RepeatedRules{}
	mi := &file_py_validate_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepeatedRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatedRules) ProtoMessage() {}

func (x *RepeatedRules) ProtoReflect() protoreflect.Message {
	mi := &file_py_validate_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatedRules.ProtoReflect.Descriptor instead.
func (*RepeatedRules) Descriptor() ([]byte, []int) {
	return file_py_validate_proto_rawDescGZIP(), []int{6}
}

func (x *RepeatedRules) GetLen() uint64 {
	if x != nil && x.Len != nil {
		return *x.Len
	}
	return 0
}

func (x *RepeatedRules) GetMinLength() uint64 {
	if x != nil && x.MinLength != nil {
		return *x.MinLength
	}
	return 0
}

func (x *RepeatedRules) GetMaxLength() uint64 {
	if x != nil && x.MaxLength != nil {
		return *x.MaxLength
	}
	return 0
}

func (x *RepeatedRules) GetItems() *FieldRules {
	if x != nil {
		return x.Items
	}
	return nil
}

var file_py_validate_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         1073,
		Name:          "py_validate.ignored",
		Tag:           "varint,1073,opt,name=ignored",
		Filename:      "py_validate.proto",
	},
	{
		ExtendedType:  (*descriptorpb.OneofOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         1073,
		Name:          "py_validate.required",
		Tag:           "varint,1073,opt,name=required",
		Filename:      "py_validate.proto",
	},
	{
		ExtendedType:  (*descriptorpb.OneofOptions)(nil),
		ExtensionType: (*OneofRules)(nil),
		Field:         1074,
		Name:          "py_validate.oneof_extend",
		Tag:           "bytes,1074,opt,name=oneof_extend",
		Filename:      "py_validate.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*FieldRules)(nil),
		Field:         1073,
		Name:          "py_validate.rules",
		Tag:           "bytes,1073,opt,name=rules",
		Filename:      "py_validate.proto",
	},
}

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional bool ignored = 1073;
	E_Ignored = &file_py_validate_proto_extTypes[0]
)

// Extension fields to descriptorpb.OneofOptions.
var (
	// optional bool required = 1073;
	E_Required = &file_py_validate_proto_extTypes[1]
	// optional py_validate.OneofRules oneof_extend = 1074;
	E_OneofExtend = &file_py_validate_proto_extTypes[2]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional py_validate.FieldRules rules = 1073;
	E_Rules = &file_py_validate_proto_extTypes[3]
)

var File_py_validate_proto protoreflect.FileDescriptor

var file_py_validate_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x70, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x28, 0x0a, 0x0a, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x52, 0x75, 0x6c, 0x65, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x22, 0x9b, 0x02, 0x0a,
	0x0a, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x66,
	0x6c, 0x6f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x79, 0x5f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x2f, 0x0a, 0x05,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x79,
	0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x32, 0x0a,
	0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x70, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x38, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x48,
	0x00, 0x52, 0x08, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70,
	0x79, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x0a, 0x46,
	0x6c, 0x6f, 0x61, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x13, 0x0a, 0x02, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x02, 0x48, 0x01, 0x52, 0x02, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x12, 0x15,
	0x0a, 0x03, 0x6c, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x48, 0x02, 0x52, 0x03, 0x6c,
	0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x67, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x48, 0x03, 0x52, 0x02, 0x67, 0x74, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x67, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x48, 0x04, 0x52, 0x03, 0x67, 0x74, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1a, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x02, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x10, 0x0a,
	0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42,
	0x05, 0x0a, 0x03, 0x5f, 0x6c, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6c, 0x74, 0x65, 0x42, 0x05,
	0x0a, 0x03, 0x5f, 0x67, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x67, 0x74, 0x65, 0x22, 0xb0, 0x01,
	0x0a, 0x0a, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x13, 0x0a, 0x02,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x02, 0x6c, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x15, 0x0a, 0x03, 0x6c, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02,
	0x52, 0x03, 0x6c, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x67, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x02, 0x67, 0x74, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a,
	0x03, 0x67, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52, 0x03, 0x67, 0x74,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x42, 0x10, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x6c, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6c, 0x74,
	0x65, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x67, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x67, 0x74, 0x65,
	0x22, 0xe4, 0x01, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x73,
	0x12, 0x15, 0x0a, 0x03, 0x6c, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x02, 0x52,
	0x03, 0x6c, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x03, 0x52, 0x09, 0x6d,
	0x69, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d,
	0x61, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48,
	0x04, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12,
	0x14, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x77, 0x65, 0x6c, 0x6c, 0x5f, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x42,
	0x10, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6c, 0x65, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x69,
	0x6e, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x61, 0x78,
	0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x5c, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0xd2, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x15, 0x0a, 0x03, 0x6c, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x03, 0x6c, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x48, 0x01, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x88,
	0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x02, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x48, 0x03,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6c,
	0x65, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x3a, 0x3d, 0x0a, 0x07, 0x69, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x64, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb1, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x3a, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb1, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x3a, 0x5d, 0x0a, 0x0c, 0x6f, 0x6e, 0x65, 0x6f,
	0x66, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4f, 0x6e, 0x65, 0x6f, 0x66,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb2, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x70, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x4f, 0x6e, 0x65,
	0x6f, 0x66, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x0b, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x3a, 0x50, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73,
	0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xb1, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52,
	0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x88, 0x01, 0x01, 0x42, 0xa6, 0x01, 0x0a, 0x0f, 0x63, 0x6f,
	0x6d, 0x2e, 0x70, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x42, 0x0f, 0x50,
	0x79, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72,
	0x74, 0x65, 0x61, 0x2d, 0x61, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65,
	0x6e, 0x2d, 0x70, 0x79, 0x64, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x3b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0xa2, 0x02, 0x03, 0x50,
	0x58, 0x58, 0xaa, 0x02, 0x0a, 0x50, 0x79, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0xca,
	0x02, 0x0a, 0x50, 0x79, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0xe2, 0x02, 0x16, 0x50,
	0x79, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x50, 0x79, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_py_validate_proto_rawDescOnce sync.Once
	file_py_validate_proto_rawDescData = file_py_validate_proto_rawDesc
)

func file_py_validate_proto_rawDescGZIP() []byte {
	file_py_validate_proto_rawDescOnce.Do(func() {
		file_py_validate_proto_rawDescData = protoimpl.X.CompressGZIP(file_py_validate_proto_rawDescData)
	})
	return file_py_validate_proto_rawDescData
}

var file_py_validate_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_py_validate_proto_goTypes = []any{
	(*OneofRules)(nil),                  // 0: py_validate.OneofRules
	(*FieldRules)(nil),                  // 1: py_validate.FieldRules
	(*FloatRules)(nil),                  // 2: py_validate.FloatRules
	(*Int32Rules)(nil),                  // 3: py_validate.Int32Rules
	(*StringRules)(nil),                 // 4: py_validate.StringRules
	(*MessageRules)(nil),                // 5: py_validate.MessageRules
	(*RepeatedRules)(nil),               // 6: py_validate.RepeatedRules
	(*descriptorpb.MessageOptions)(nil), // 7: google.protobuf.MessageOptions
	(*descriptorpb.OneofOptions)(nil),   // 8: google.protobuf.OneofOptions
	(*descriptorpb.FieldOptions)(nil),   // 9: google.protobuf.FieldOptions
}
var file_py_validate_proto_depIdxs = []int32{
	2,  // 0: py_validate.FieldRules.float:type_name -> py_validate.FloatRules
	3,  // 1: py_validate.FieldRules.int32:type_name -> py_validate.Int32Rules
	4,  // 2: py_validate.FieldRules.string:type_name -> py_validate.StringRules
	6,  // 3: py_validate.FieldRules.repeated:type_name -> py_validate.RepeatedRules
	5,  // 4: py_validate.FieldRules.message:type_name -> py_validate.MessageRules
	1,  // 5: py_validate.RepeatedRules.items:type_name -> py_validate.FieldRules
	7,  // 6: py_validate.ignored:extendee -> google.protobuf.MessageOptions
	8,  // 7: py_validate.required:extendee -> google.protobuf.OneofOptions
	8,  // 8: py_validate.oneof_extend:extendee -> google.protobuf.OneofOptions
	9,  // 9: py_validate.rules:extendee -> google.protobuf.FieldOptions
	0,  // 10: py_validate.oneof_extend:type_name -> py_validate.OneofRules
	1,  // 11: py_validate.rules:type_name -> py_validate.FieldRules
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	10, // [10:12] is the sub-list for extension type_name
	6,  // [6:10] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_py_validate_proto_init() }
func file_py_validate_proto_init() {
	if File_py_validate_proto != nil {
		return
	}
	file_py_validate_proto_msgTypes[1].OneofWrappers = []any{
		(*FieldRules_Float)(nil),
		(*FieldRules_Int32)(nil),
		(*FieldRules_String_)(nil),
		(*FieldRules_Repeated)(nil),
		(*FieldRules_Message)(nil),
	}
	file_py_validate_proto_msgTypes[2].OneofWrappers = []any{
		(*FloatRules_Default)(nil),
	}
	file_py_validate_proto_msgTypes[3].OneofWrappers = []any{
		(*Int32Rules_Default)(nil),
	}
	file_py_validate_proto_msgTypes[4].OneofWrappers = []any{
		(*StringRules_Uuid)(nil),
		(*StringRules_Default)(nil),
	}
	file_py_validate_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_py_validate_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 4,
			NumServices:   0,
		},
		GoTypes:           file_py_validate_proto_goTypes,
		DependencyIndexes: file_py_validate_proto_depIdxs,
		MessageInfos:      file_py_validate_proto_msgTypes,
		ExtensionInfos:    file_py_validate_proto_extTypes,
	}.Build()
	File_py_validate_proto = out.File
	file_py_validate_proto_rawDesc = nil
	file_py_validate_proto_goTypes = nil
	file_py_validate_proto_depIdxs = nil
}
